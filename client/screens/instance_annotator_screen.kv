#:import utils kivy.utils
#:import ClientConfig client.client_config.ClientConfig

<InstanceAnnotatorScreen>:
    left_control: left_control
    right_control: right_control
    image_canvas: image_canvas
    BoxLayout:
        orientation: "vertical"
        ActionBar:
            pos_hint: {'top':1}
            ActionView:
                use_separator: True
                ActionPrevious:
                    title: app.current_project_name
                    with_previous: True
                    on_release: app.show_project_tools(app.current_project_name, app.current_project_id)
        BoxLayout:
            orientation: "horizontal"
            LeftControlColumn:
                id: left_control
                size_hint_x: 350 / root.width
            ImageCanvas:
                id: image_canvas
            RightControlColumn:
                id: right_control
                size_hint_x: 350 / root.width

<LeftControlColumn>:
    tool_select: tool_select
    class_picker: class_picker
    layer_view: layer_view
    orientation: "vertical"
    canvas:
        Color:
            rgba: utils.get_color_from_hex(ClientConfig.CLIENT_DARK_3)
        Rectangle:
            pos: self.pos
            size: self.size
    ToolSelect:
        id: tool_select
        size_hint_y: 400 / root.height

    ClassPicker:
        id: class_picker
        size_hint_y: 400 / root.height
    LayerView:
        id: layer_view

<ToolSelect>:
    cols: 1
    Label:
        text: "Tool Options"
        size_hint_y: None
        height: 50
    BoxLayout:
        orientation: "horizontal"
        size_hint_y: None
        height: 30
        Label:
            text: "pen size"
        NumericInput:
            value: 10
            step: 5
            on_value: root.set_pencil_size(self.value)
    BoxLayout:
        orientation: "horizontal"
        size_hint_y: None
        height: 30
        Label:
            text: "alpha"
        NumericInput:
            min: 0.0
            max: 1.0
            value: 1.0
            step: 0.1
            on_value: root.set_alpha(self.value)

<ClassPicker>:
    cols: 1
    Label:
        text: "Class Picker"
        size_hint_y: None
        height: 50
    GridLayout:
        cols: 2
        ClassPickerItem:
            class_name: "Green"
            class_color: (0.3, 0.8, 0.2, 1)
        ClassPickerItem:
            class_name: "Purple"
            class_color: (0.5, 0.3, 0.9, 1)
        ClassPickerItem:
            class_name: "Red"
            class_color: (0.9, 0.2, 0.2, 1)
        ClassPickerItem:
            class_name: "Blue"
            class_color: (0.4, 0.7, 0.9, 1)

<ClassPickerItem>
    class_color: self.class_color
    class_name: self.class_name
    class_id: self.class_id

    background_color: root.class_color
    background_down: ''
    size_hint_y: None
    height: 50
    text: self.class_name
    on_release: app.root.current_screen.left_control.class_picker.change_class(root)

<LayerView>:
    layer_item_list: layer_item_list
    cols: 1
    Button:
        size_hint_y: None
        height: 50
        text: "Add Layer"
        on_release: app.root.current_screen.image_canvas.layer_stack.add_layer()
    ScrollView:
        GridLayout:
            cols: 1
            size_hint_y: None
            height: self.minimum_height
            id: layer_item_list

<LayerViewItem>:
    layer_name: self.layer_name
    mask_enabled: self.mask_enabled
    bbox_enabled: self.bbox_enabled
    layer_index: self.layer_index
    height: 50
    size_hint_y: None
    Button:
        size_hint: (1,1)
        on_release: root.select_layer()
    BoxLayout:
        size_hint: (1, 1)
        pos_hint: {'center_x': .5, 'center_y': .5}
        padding: 8
        spacing: 8
        Button:
            text: "M" * root.mask_enabled
            size_hint_x: None
            width: self.height
            on_release: root.toggle_mask()
        Button:
            text: "B" * root.bbox_enabled
            size_hint_x: None
            width: self.height
            on_release: root.toggle_bbox()
        Label:
            text: root.layer_name
            halign: 'left'
            valign: 'center'
            text_size: self.size



<ImageCanvas>:
    image: image
    layer_stack: layer_stack
    draw_tool: draw_tool
    scroll_view: scroll_view
    canvas:
        Color:
            rgba: 0.8, 0.8, 0.8, 0.8
        Rectangle:
            pos: self.pos
            size: self.size
    ScrollView:
        id: scroll_view
        size: root.size
        Image:
            id: image
            keep_ratio: True
            size: root.size
            pos: root.pos
            size_hint:(None, None)
            FloatLayout:
                DrawTool:
                    id: draw_tool
                LayerStack:
                    id: layer_stack


<LayerStack>:
    layer_list: self.layer_list
    current_layer: self.current_layer

<DrawTool>
    layer: self.layer
    pen_size: self.pen_size
    layer_color: self.layer_color

<DrawableLayer>:
    mask_layer: mask_layer
    mask_color: self.mask_color
    fbo: self.fbo

    bbox_layer: bbox_layer
    bbox_color: self.bbox_color
    bbox_thickness: self.bbox_thickness
    bbox_top_right: self.bbox_top_right
    bbox_bot_left: self.bbox_bot_left
    bbox_bounds: self.bbox_bounds


    Widget:
        id: mask_layer
        canvas.before:
            Color:
                rgba: root.mask_color

    Widget:
        id: bbox_layer
        canvas.before:
            Color:
                rgba: root.bbox_color
            Line:
                width: root.bbox_thickness
                rectangle: root.bbox_bounds


<RightControlColumn>:
    image_queue: image_queue
    image_queue_control: image_queue_control
    orientation: "vertical"
    canvas:
        Color:
            rgba: utils.get_color_from_hex(ClientConfig.CLIENT_DARK_3)
        Rectangle:
            pos: self.pos
            size: self.size
    ImageQueueControl:
        id: image_queue_control
        size_hint_y: 400 / root.height
        size_hint_x: 1
    ImageQueue:
        id: image_queue

<ImageQueueControl>:
    btn_save: btn_save
    cols: 1
    padding: 16
    spacing: 16
    Button:
        text: "Next"
        size_hint_y: None
        height: 50
        on_release: app.root.current_screen.load_image()
    Button:
        id: btn_save
        text: "Save"
        size_hint_y: None
        height: 50
        disabled: True
        on_release: app.root.current_screen.save_image()
    Button:
        text: "Refresh"
        size_hint_y: None
        height: 50
        on_release: app.root.current_screen.refresh_image_queue()

<ImageQueue>:
    queue: queue
    cols: 1
    Label:
        text: "Image Queue"
        size_hint_y: None
        height: 50
    GridLayout:
        id: queue
        cols: 1

<ImageQueueItem>:
    image_name: self.image_name
    image_id: self.image_id
    image_open: self.image_open
    image_locked: self.image_locked
    button_color: self.button_color

    size_hint_y: None
    height: 50
    Button:
        text: root.image_name
        background_color: root.button_color
        on_release: app.root.current_screen.load_image(root.image_id)
        disabled: root.image_locked
